<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>User Dashboard</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous" />
    <style>
        body {
            margin: 0px;
            background-color: blanchedalmond
        }

        .img-fluid {
            width: 200px;
            height: 150px;
        }

        .card {
            background-color: aliceblue;
        }

        .dboard {
            display: flex;
        }

        @media(max-width:576px) {
            .dboard {
                flex-direction: column;
            }

            .btn-success {
                width: fit-content
            }
        }
    </style>
</head>

<body>
    <div class="container p-4 p-md-0 mt-md-5">
        <div class="dboard mb-3">
            <h1 class="me-5">Admin Dashboard</h1>
            <button class="btn btn-success" onclick="downloadCSV()">Download Details</button>
        </div>
        <% if (registrations.length> 0) { %>
            <div class="row row-cols-1 row-cols-md-3 g-4">
                <% registrations.forEach(registration=> { %>
                    <div class="col">
                        <div class="card mb-md-3">
                            <div class="card-body">
                                <h5 class="card-title">
                                    <%= registration.fname %>
                                        <%= registration.lname %>
                                </h5>
                                <p class="card-text">
                                    <strong>Registered Number:</strong>
                                    <%= registration.registrationNumber %><br>
                                        <strong>Email:</strong>
                                        <%= registration.email %><br>
                                            <strong>Age:</strong>
                                            <%= registration.age %><br>
                                                <strong>Phone:</strong>
                                                <%= registration.phone %><br>
                                                    <strong>Hospital:</strong>
                                                    <%= registration.hospital %><br>
                                                        <strong>Crichero userID:</strong>
                                                        <%= registration.crichero %><br>
                                                            <strong>Transaction ID:</strong>
                                                            <%= registration.transactionId %><br>
                                                                <% if (registration.fileUploadPayment) { %>
                                                                    <strong>Payment Receipt:</strong><br>
                                                                    <img src="<%= registration.fileUploadPayment %>"
                                                                        alt="Payment Receipt" class="img-fluid">
                                                                    <% } %>
                                </p>
                                <button class="btn btn-primary"
                                    onclick="sendConfirmation('<%= registration.email %>')">Accept</button>
                            </div>
                        </div>
                    </div>
                    <% }); %>
            </div>
            <% } else { %>
                <p>No registrations found.</p>
                <% } %>
    </div>
    <!--
        
       

    -->
    <script>
        function downloadCSV() {
        // Extract registration details
        var registrationsData = JSON.parse('<%- JSON.stringify(registrations) %>')
        console.log(registrationsData);

        // Function to download image files
        function downloadImage(url, filename) {
            return fetch(url)
                .then(response => response.blob())
                .then(blob => {
                    const link = document.createElement('a');
                    link.href = window.URL.createObjectURL(blob);
                    link.download = filename;
                    link.click();
                })
                .catch(error => console.error('Error downloading image:', error));
        }

        // Download all payment receipt images
        const imageDownloadPromises = registrationsData.map(registration => {
            if (registration.fileUploadPayment) {
                const paymentFilename = `payment_receipt_${registration.registrationNumber}.png`;
                return downloadImage(registration.fileUploadPayment, paymentFilename);
            }
        });

        // Wait for all image downloads to complete
        Promise.all(imageDownloadPromises)
            .then(() => {
                // Create a CSV content
                const csvContent =
                    "Registration Number,First Name,Last Name,Email,Date of Birth,Age,Phone,Hospital Name,Consent,BMA/IMA member,T-shirt Size,Trouser Size,Name on t-shirt,Number on t-shirt,Player Profile,Specialized Position for batsmen,Type of Batsmen,Type of hitter,Specialized Position for bowler,Type of Bowler,Crichero userID,Type of Payment,Transaction ID,Transaction Date,Previous Seasons\n" +
                    registrationsData
                        .map(
                            (registration) =>
                                `${registration.registrationNumber},${registration.fname},${registration.lname},${registration.email},${registration.dob},${registration.age},'${registration.phone}',${registration.hospital},${registration.consent},${registration.bmaIma},${registration.tshirtSize},${registration.trouserSize},${registration.nameOnTshirt},${registration.numberOnTshirt},${registration.playerProfile},${registration.specializedPosition},${registration.type_of_batsmen},${registration.hitter},${registration.typeOfBowler},${registration.type_of_bowler_side},${registration.crichero},${registration.typeOfPayment},${registration.transactionId},${registration.transaction_date},${Array.isArray(registration.previousSeasons) ? registration.previousSeasons.join(', ') : registration.previousSeasons}`
                        )
                        .join("\n");

                // Create a Blob containing the CSV data
                const csvBlob = new Blob([csvContent], { type: "text/csv" });

                // Create a download link and trigger the download
                const link = document.createElement("a");
                link.href = URL.createObjectURL(csvBlob);
                link.download = "player_details.csv";
                link.click();
            });
    }
 /*      function downloadCSV() {
            // Extract registration details
            var registrationsData = JSON.parse('<%- JSON.stringify(registrations) %>')
            console.log(registrationsData)
            // Create a CSV content 
            const csvContent = "Registration Number,First Name,Last Name,Email,Date of Birth,Age,Phone,Hospital Name,Consent,BMA/IMA member,T-shirt Size,Trouser Size,Name on t-shirt,Number on t-shirt,Player Profile,Specialized Position for batsmen,Type of Batsmen,Type of hitter,Specialized Position for bowler,Type of Bowler,Crichero userID,Type of Payment,Transaction ID,Transaction Date,Previous Seasons\n"
                + registrationsData.map(registration => (
                    `${registration.registrationNumber},${registration.fname},${registration.lname},${registration.email},${registration.dob},${registration.age},'${registration.phone}',${registration.hospital},${registration.consent},${registration.bmaIma},${registration.tshirtSize},${registration.trouserSize},${registration.nameOnTshirt},${registration.numberOnTshirt},${registration.playerProfile},${registration.specializedPosition},${registration.type_of_batsmen},${registration.hitter},${registration.typeOfBowler},${registration.type_of_bowler_side},${registration.crichero},${registration.typeOfPayment},${registration.transactionId},${registration.transaction_date},${Array.isArray(registration.previousSeasons) ? registration.previousSeasons.join(', ') : registration.previousSeasons}`
                )).join("\n");

            // Create a Blob containing the CSV data
            const csvBlob = new Blob([csvContent], { type: "text/csv" });

            // Create a download link and trigger the download
            const link = document.createElement("a");
            link.href = URL.createObjectURL(csvBlob);
            link.download = "player_details.csv";
            link.click();
            registrationsData.forEach(registration => {
                if (registration.fileUploadPayment) {
                    const filename = `payment_receipt_${registration.registrationNumber}.png`;
                    downloadImage(registration.fileUploadPayment, filename);
                }
            });
        }
    */

        function sendConfirmation(email) {
            fetch(`/confirm-email/${email}`, {
                method: 'POST'
            })
                .then(response => {
                    if (response.ok) {
                        console.log('Email sent successfully!');
                        alert("Email sent Successfully")
                    } else {
                        //console.error('Error sending email:', response.statusText);
                    }
                })
                .catch(error => {
                    console.error('Error sending email:', error);
                });
        }
    </script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL"
        crossorigin="anonymous"></script>
</body>

</html>